-- Creating Tables

CREATE TABLE employee (
    EmployeeID INT PRIMARY KEY,
    EmployeeName VARCHAR(50),
    Street VARCHAR(100),
    City VARCHAR(50)
);

CREATE TABLE works (
    EmployeeID INT,
    CompanyName VARCHAR(50),
    Salary DECIMAL(10,2),
    PRIMARY KEY (EmployeeID, CompanyName),
    FOREIGN KEY (EmployeeID) REFERENCES employee(EmployeeID)
);

CREATE TABLE company (
    CompanyName VARCHAR(50) PRIMARY KEY,
    City VARCHAR(50)
);

CREATE TABLE manages (
    EmployeeID INT PRIMARY KEY,
    ManagerID INT,
    FOREIGN KEY (EmployeeID) REFERENCES employee(EmployeeID),
    FOREIGN KEY (ManagerID) REFERENCES employee(EmployeeID)
);

-- Inserting Data into Employee Table

INSERT INTO employee (EmployeeID, EmployeeName, Street, City) VALUES
(1, 'Rakib Hasan', 'Dhanmondi 32', 'Dhaka'),
(2, 'Sumaiya Akter', 'Chawk Bazar', 'Chittagong'),
(3, 'Imran Hossain', 'Kazir Dewri', 'Chittagong'),
(4, 'Ayesha Siddique', 'Banani', 'Dhaka'),
(5, 'Mahmudul Islam', 'Shibganj', 'Rajshahi'),
(6, 'Farzana Rahman', 'Kushtia Sadar', 'Kushtia'),
(7, 'Naimur Rahman', 'Uttara', 'Dhaka'),
(8, 'Sajid Mahmud', 'Sylhet Sadar', 'Sylhet');

-- Inserting Data into Company Table

INSERT INTO company (CompanyName, City) VALUES
('Grameenphone', 'Dhaka'),
('Robi Axiata', 'Chittagong'),
('Walton', 'Gazipur'),
('Square Pharma', 'Dhaka'),
('ACI Limited', 'Narayanganj'),
('Bashundhara Group', 'Dhaka'),
('Unilever BD', 'Chittagong'),
('BRAC Bank', 'Dhaka');

-- Inserting Data into Works Table

INSERT INTO works (EmployeeID, CompanyName, Salary) VALUES
(1, 'Grameenphone', 85000.00),
(2, 'Robi Axiata', 78000.00),
(3, 'Walton', 92000.00),
(4, 'Square Pharma', 75000.00),
(5, 'ACI Limited', 88000.00),
(6, 'Bashundhara Group', 67000.00),
(7, 'Unilever BD', 98000.00),
(8, 'BRAC Bank', 89000.00);

-- Inserting Data into Manages Table

INSERT INTO manages (EmployeeID, ManagerID) VALUES
(2, 1),  -- Sumaiya is managed by Rakib
(3, 1),  -- Imran is managed by Rakib
(4, 3),  -- Ayesha is managed by Imran
(5, 4),  -- Mahmudul is managed by Ayesha
(6, 5),  -- Farzana is managed by Mahmudul
(7, 5),  -- Naimur is managed by Mahmudul
(8, 6);  -- Sajid is managed by Farzana

==============

1. Find the company name that has the most employees.

SELECT company_name  
FROM works  
GROUP BY company_name  
ORDER BY COUNT(employee_id) DESC  
LIMIT 1; 

2. Find the average salaries of each company.

SELECT company_name, AVG(salary) AS average_salary  
FROM works  
GROUP BY company_name;

3. Find all employees who live in city cty but their company is not in cty.

SELECT e.employee_name  
FROM employee e  
JOIN works w ON e.employee_id = w.employee_id  
JOIN company c ON w.company_name = c.company_name  
WHERE e.employee_city = 'Barishal'  
AND c.company_city != 'Barishal';  

4. Find the name of all employees who work for First Bank Corporation

SELECT e.employee_name  
FROM employee e  
JOIN works w ON e.employee_id = w.employee_id  
WHERE w.company_name = 'First Bank Co.'; 

5. Find the names, cities, and salaries of all employees who work for FBC.

SELECT e.employee_name, e.employee_city, e.salary  
FROM employee e  
JOIN works w ON e.employee_id = w.employee_id  
WHERE w.company_name = 'First Bank Co.';

6. Find the names of employees who do not work for First Bank Co.

SELECT e.employee_name  
FROM employee e  
JOIN works w ON e.employee_id = w.employee_id  
WHERE w.company_name != 'First Bank Co.';  

7. Find the total salaries of each company.

SELECT company_name, SUM(salary) AS total_salary  
FROM works  
GROUP BY company_name; 

8. Give all employees of First Bank Co. a 20% salary raise

update works  
set salary = salary * 1.2  
where company_name = 'First bank co.';

9. Find the second highest salary:

select employee_name, salary as second_highest  
from (  
    select employee_name, salary,  
    dense_rank() over (order by salary desc)  
    as rank from works  
) as ranked_salary  
where rank = 2;

10. Find employee_name, company_name, and employee_city of the employee who earns the second highest salary

select employee_name, company_name, employee_city  
from employee e  
join works w on e.employee_id = w.employee_id  
where w.salary = (select max(salary) from works  
where salary < (select max(salary) from works));

11. 9 er moto 
12. 9 er moto

13. Find companies with more than 5 employees

select company_name  
from works group by company_name  
having count(employee_id) > 5;

14. same as 8

15. Delete all records where an employee has no manager

delete from managers  
where manager_id is null;

16. Assign a new manager to employees who currently have no manager

update managers  
set manager_id = (select manager_id from managers  
where manager_id is not null  
limit 1)  
where manager_id is null;
